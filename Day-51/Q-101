#include <stdio.h>

int findFirstOccurrence(int nums[], int n, int target) {
    int low = 0, high = n - 1;
    int result = -1;
    while (low <= high) {
        int mid = low + (high - low) / 2;  
        if (nums[mid] == target) {
            result = mid;  
            high = mid - 1;
        } else if (nums[mid] < target) {
            low = mid + 1;
        } else {
            high = mid - 1;
        }
    }
    return result;
}

int findLastOccurrence(int nums[], int n, int target) {
    int low = 0, high = n - 1;
    int result = -1;
    while (low <= high) {
        int mid = low + (high - low) / 2;
        if (nums[mid] == target) {
            result = mid;  
            low = mid + 1; 
        } else if (nums[mid] < target) {
            low = mid + 1;
        } else {
            high = mid - 1;
        }
    }
    return result;
}
int main() {
    int n; 
    int nums[1000]; 
    int target;
    printf("Enter the size of the array: ");
    scanf("%d", &n);
    printf("Enter the sorted array elements: ");
    for (int i = 0; i < n; i++) {
        scanf("%d", &nums[i]);
    }
    printf("Enter the target integer: ");
    scanf("%d", &target);
    int first = findFirstOccurrence(nums, n, target);
    int last = findLastOccurrence(nums, n, target);
    if (first != -1 && last != -1) {
        printf("First occurrence at index: %d\n", first);
        printf("Last occurrence at index: %d\n", last);
    } else {
        printf("-1 -1\n");  
    }
    return 0;
}
